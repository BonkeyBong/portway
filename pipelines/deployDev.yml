version: '1.0'
fail_fast: false
steps:
  main_clone:
    title: Cloning main repository...
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    git: 'github'
  extract_ze_version:
    title: Extract version to deploy
    image: alpine
    commands:
      - cf_export VERSION_TAG="$(cat ./deploys/dev.txt)"
    when:
      condition:
        all:
          onSuccess: workflow.result == 'success'
  deploy_to_dev_cf_step:
    title: Deploy to Dev Cluster
    image: codefresh/cfstep-helm:2.14.3
    environment:
      - CHART_REF=kubernetes/helm/portway
      - RELEASE_NAME=portway
      - KUBE_CONTEXT=dev-kubernetes-portway
      - VALUE_apiTag=$VERSION_TAG
      - VALUE_webTag=$VERSION_TAG
      - VALUE_sync_tag=$VERSION_TAG
    when:
      condition:
        all:
          onSuccess: workflow.result == 'success'
  send_success_to_slack:
    title: Success Slack Notification
    image: tutum/curl
    commands:
      - curl -X POST --data-urlencode 'payload={"text":"Successfully deployed ${{VERSION_TAG}} to dev"}' ${{SLACK_WEB_URL}}
    when:
      condition:
        all:
          onSuccess: workflow.result == 'success'
  send_failure_to_slack:
    title: Failure Slack Notification
    image: tutum/curl
    commands:
      - curl -X POST --data-urlencode 'payload={"text":"Failed to deploy ${{VERSION_TAG}} to dev"}' ${{SLACK_WEB_URL}}
    when:
      condition:
        all:
          onSuccess: workflow.result == 'failure'

  # This pipeline is broken, disabling until puppeteer tests fixed
  # run_puppeteer_pipeline:
  #   title: Run Puppeteer Pipeline
  #   type: codefresh-run
  #   arguments:
  #     PIPELINE_ID: 5e1601447ab3a73f622ee053
  #     VARIABLE:
  #       - CF_BRANCH=${{CF_BRANCH}}
  #       - CF_REVISION=${{CF_REVISION}}
  #       - CF_REPO_NAME=${{CF_REPO_NAME}}
  #       - CF_REPO_OWNER=${{CF_REPO_OWNER}}