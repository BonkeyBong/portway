@import 'CSS/inc/_mixins.scss';

.document-field {
  --field-edit-mode-background: hsla(0, 0%, 95%, 90%);
  --field-name-width: 150px;
  margin-top: 1.8rem;
  outline: 0;

  &--dragging {
    cursor: grabbing;
    padding: 1.8rem 0 !important;
    .document-field__actions {
      visibility: hidden;
    }
    .document-field__container {
      background-color: var(--color-gray-5) !important;
      border: none !important;
      border-radius: var(--border-radius);
      * { visibility: hidden; }
    }
    * {
      pointer-events: none;
    }
  }

  &--dragged-over {
    * {
      pointer-events: none;
    }
  }

} // document-field


// Data fields that are directly next to each other shouldn't
// get a top border so they look more like a table
.document-field--data + .document-field--data {
  margin-top: 0;
  .document-field__container {
    border-top: none;
  }
}


// The component is everything for a field, three columns
.document-field__component {
  align-items: stretch;
  display: flex;
  padding: 0 2.3rem;
} // document-field__component


// Container contains the name and the content
.document-field__container {
  flex: 1;
  margin: 0 1.9rem;

  // Data fields get a border and background-color, like a table
  .document-field--data & {
    background-color: var(--theme-overflow);
    border: thin solid var(--color-gray-10);
    display: flex;
    input {
      background-color: transparent;
    }
  }

} // document-field__container


// Field name is only visible for data fields
.document-field__name {
  align-items: flex-start;
  border-right: thin solid var(--theme-border);
  display: flex;
  flex: 0 0 var(--field-name-width);
  flex-direction: column;
  justify-content: center;
  padding: .7rem 1.2rem;
  &-label {
    font-size: 1.3rem;
    margin-bottom: .8rem;
  }
  input {
    border: none;
    color: var(--theme-text-color);
    font-size: 1.3rem; // 13px
    font-weight: 600;
    min-width: var(--field-name-width); // change this in DocumentFieldComponent.js as well
    outline: none;
  }
} // document-field__name


// Field content is the actual field value (textarea, image, etc)
.document-field__content {
  align-items: flex-start;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;

  // A new field should be obvious it is new
  .document-field--new.document-field--data & {
    border-color: var(--color-blue);
  }

  .document-field--data & {
    padding: 1.4rem 1.05rem;
    input {
      border: transparent;
      font-size: 1.5rem;
      line-height: 2.4rem;
    }
  }

} // document-field__content


// Field settings show up for fields with settings
.document-field__settings {
  align-items: center;
  background: var(--color-gray-70);
  bottom: 0;
  color: var(--color-gray-2);
  display: flex;
  justify-content: space-between;
  left: 0;
  padding: 1rem 2rem;
  position: absolute;
  width: 100%;
  z-index: 3;

  &__label {
    font-size: 1.2rem;
    padding-right: 1rem;
  }

  &__input {
    background: none;
    border: none;
    color: var(--color-gray-5);
    font-size: 1.2rem;
    @include focus(transparent, transparent);
    border-bottom: thin solid var(--color-gray-80);
  }

  &__button {
    font-size: 1.2rem;
  }

} // document-field__settings


/**
 * For drag areas (files, etc) overriding FileUploaderComponent styles
 * -------------------------------------------------------------------------- */
.document-field {
  .file-uploader {
    align-items: center;
    border: thin solid var(--color-gray-5);
    border-radius: var(--border-radius);
    display: flex;
    padding: var(--gutter-width);
    width: 100%;

    label {
      text-align: center;
    }

    &--with-value {
      background-color: var(--theme-overlay-dark);
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
    }

    &--dragged-over {
      background-color: var(--color-gray-5);
    }

    &--uploading {
      border: thin solid transparent;
      border-radius: 0;
      padding: 0;
    }

    &__status {
      position: relative;
      .spinner {
        left: 50%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
      }
    }
  }
} // document-field file-uploader override








// &--number, &--string {
//   background-color: var(--theme-overflow);
//   border-bottom: none;
//   box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.02);
//   margin: 0 24px;

//   input {
//     background-color: transparent;
//     // &::selection {
//       // color: #fff;
//     // }
//   }

//   // &:first-child {
//     // border-top-left-radius: var(--border-radius);
//     // border-top-right-radius: var(--border-radius);
//   // }

//   &:last-child {
//     border-bottom: thin solid var(--theme-border);
//     // border-bottom-left-radius: var(--border-radius);
//     // border-bottom-right-radius: var(--border-radius);
//     // margin-bottom: var(--gutter-width);
//   }

//   &:focus-within {
//     background-color: var(--color-gray-5);
//   }

//   // New data fields
//   &--new {
//     background-color: var(--color-brand-light);
//     border: thin solid transparent;

//     .document-field__name {
//       border-right: thin solid var(--color-brand-light);
//     }

//     &:focus-within {
//       background-color: var(--color-brand-light);
//     }
//     input {
//       background-color: var(--color-brand-light);
//       &::selection {
//         background-color: var(--color-yellow);
//         // color: #fff;
//       }
//     }
//   }

// } // string, number

