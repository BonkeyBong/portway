@import 'CSS/inc/_include-media.scss';
@import 'CSS/inc/_mixins.scss';

.document-field {
  --field-edit-mode-background: hsla(0, 0%, 95%, 90%);
  --field-name-width: 150px;
  --field-data-name-color: hsla(0, 0%, 26%, .5);
  --field-data-background: var(--theme-overflow);
  --field-data-border: var(--color-gray-10);
  --field-dragging-background: var(--color-gray-5);
  @media (prefers-color-scheme: dark) {
    --field-data-name-color: hsla(0, 0%, 100%, .2);
    --field-data-background: var(--theme-overlay-dark);
    --field-data-border: var(--theme-overlay-light);
    --field-dragging-background: var(--theme-base);
  }
  margin-top: 2.4rem;
  max-width: 1200px;
  outline: 0;

  // The whole field, when it is being dragged
  &--dragging {
    cursor: grabbing;
    padding: 1.8rem 0 !important;
    -webkit-user-drag: element; // Safari hack
    .document-field__actions {
      visibility: hidden;
    }
    .document-field__container {
      background-color: var(--field-dragging-background) !important;
      border: none !important;
      border-radius: var(--border-radius);
      * { visibility: hidden; }
    }
    * {
      pointer-events: none;
    }
  }

  // When something is dragged over the field, turn off all mouse interactions
  &--dragged-over {
    * {
      pointer-events: none;
    }
  }

  // Clone element is passed to the browser as the "drag image"
  &--clone-element {
    list-style: none;
    .document-field__component {
      padding: 0;
    }
    .document-field__container {
      margin: 0;
    }
    .document-field__actions {
      display: none;
    }
  }

} // document-field


// Data fields that are directly next to each other shouldn't
// get a top border so they look more like a table
.document-field--data + .document-field--data {
  margin-top: 0;
  .document-field__container {
    border-top: none;
  }
}


// The component is everything for a field, three columns
.document-field__component {
  align-items: stretch;
  display: flex;
  padding: 0 1.3rem;

  @include media ('>medium') {
    padding: 0 2.3rem;
  }

  .document__fields--is-dragging & {
    overflow: hidden;
    max-height: 100px;
  }

} // document-field__component


// Container contains the name and the content
.document-field__container {
  flex: 1;
  margin: 0 1.9rem;

  // Data fields get a border and background-color, like a table
  .document-field--data & {
    background-color: var(--field-data-background);
    border: thin solid var(--field-data-border);
    display: flex;
    flex-direction: column;

    @include media('>medium') {
      flex-direction: row;
    }

    input {
      background-color: transparent;
    }

  }

} // document-field__container


// Field name is only visible for data fields
.document-field__name {
  display: flex;
  flex-direction: column;
  padding: .8rem .8rem;

  @include media('>medium') {
    align-items: flex-start;
    border-right: thin solid var(--theme-border);
    display: flex;
    flex: 0 0 var(--field-name-width);
    flex-direction: column;
    justify-content: center;
    padding: .7rem 1.2rem;
  }

  &-label {
    color: var(--field-data-name-color);
    font-size: 1.3rem;
    @include media('>medium') {
      margin-bottom: .6rem;
    }
  }

  input {
    border: thin solid transparent;
    color: var(--theme-text-color);
    font-size: 1.3rem; // 13px
    font-weight: 600;
    min-height: unset;
    min-width: var(--field-name-width); // change this in DocumentFieldComponent.js as well
    outline: none;
    padding: 0;
    .using-mouse & {
      &:focus {
        border: thin solid transparent;
        box-shadow: none;
      }
    }
  }
} // document-field__name


// Field content is the actual field value (textarea, image, etc)
.document-field__content {
  align-items: flex-start;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  position: relative;

  input {
    border: thin solid transparent;
    .using-mouse & {
      &:focus {
        border: thin solid transparent;
        box-shadow: none;
      }
    }
  }

  // A new field should be obvious it is new
  .document-field--new.document-field--data & {
    border-color: var(--color-blue);
  }

  .document-field--data & {

    @include media('>medium') {
      padding: 1.4rem 1.05rem;
    }

    input {
      font-size: 1.5rem;
      line-height: 2.4rem;
      width: 100%;
    }
  }

} // document-field__content

.document-field__invisible-button {
  cursor: text;
  height: 88px;
  width: 100%;
}
