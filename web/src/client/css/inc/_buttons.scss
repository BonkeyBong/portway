@import 'vars';
@import 'mixins';

.btn-group {
  align-items: center;
  display: flex;
  justify-content: flex-start;
  padding: ($sideGutterWidth / 2) 0;
  .btn {
    margin-right: 12px;
  }
}

[role="button"] {
  cursor: pointer;
}

button,
.btn, .button {
  // @todo Delete this because it's in initial render
  //
  // align-items: center;
  // background-color: $action;
  // border-radius: $borderRadius;
  // border: thin solid transparent;
  // color: #fff;
  // cursor: pointer;
  // display: inline-flex;
  // font-family: $sansSerif;
  // font-weight: 500;
  // margin-bottom: 0;
  // margin-top: 0;
  // min-height: 38px;
  // padding: 0 37px;
  // text-decoration: none;
  // white-space: nowrap;
  // -webkit-appearance: none;

  p { color: $gray-dark; margin: 0; }

  @include focus($action);

  &:not([disabled]) {
    &:hover {
      background-color: $action-light;
      color: #fff;
    }
    &:active {
      background-color: $action-dark;
      color: #fff;
    }
  }

  &--small {
    font-size: 1.2rem;
    min-height: 24px;
    padding: 0 18px;
    &.btn--with-icon {
      padding: 0 6px;
      .icon {
        height: 12px;
        min-height: 12px;
        min-width: 12px;
        width: 12px;
      }
    }
  }

  &--primary {
    @include focus($primary, $primary);
    background-color: $primary;
    border: thin solid $primary;
    &:not([disabled]) {
      &:hover {
        background-color: lighten($primary, 10%);
        color: $white;
      }
      &:active {
        background-color: $primary-dark;
        color: $white;
      }
    }
    &[aria-expanded="true"] {
      background-color: $primary-dark;
    }
  }

  &--white {
    @include focus(var(--button-white-background), var(--button-white-border));
    background-color: var(--button-white-background);
    border: thin solid var(--button-white-border);
    color: inherit;
    &:not([disabled]) {
      &:hover {
        background-color: var(--button-white-background);
        border: thin solid var(--button-white-border-hover);
        color: inherit;
      }
      &:active {
        background-color: var(--button-white-background);
        color: inherit;
      }
    }
    &[aria-expanded="true"] {
      background-color: var(--button-white-border-hover);
    }
  }

  &--blank, &--like-a-link {
    background-color: transparent;
    border-radius: 0;
    color: inherit;
    padding: 0;
    @include focus(transparent);
    &:not([disabled]) {
      &:hover,
      &:active {
        background-color: transparent;
        border: thin solid transparent;
        box-shadow: none;
        color: inherit;
        outline: 0;
      }
    }
  }

  &--like-a-link {
    color: var(--base-link-color);
    font-weight: 400;
    text-decoration: underline;
    &:not([disabled]) {
      &:hover, &:focus {
        color: var(--base-link-hover-color);
      }
      &:active {
        color: var(--base-link-active-color);
      }
    }
  }

  &--with-icon {
    align-items: center;
    display: inline-flex;
    padding: 0 10px 0 10px;
    .icon {
      .icon-caret {
        transition: transform 0.2s ease-in-out;
      }
    }
    .label {
      flex: 1;
      flex-wrap: nowrap;
      padding: 2px 0 2px 4px;
    }
    &[aria-expanded="true"] {
      .icon-caret {
        transform: rotate(-180deg);
      }
      .label {
        color: $gray;
      }
    }
  }

  &--with-circular-icon {
    align-items: center;
    display: inline-flex;
    .icon {
      background-color: var(--button-icon-background);
      border-radius: 50% 50%;
    }
    .label {
      flex: 1;
      flex-wrap: nowrap;
      padding: 2px 8px 2px 8px;
    }
    &:hover {
      &:not([disabled]) {
        .icon {
          background-color: var(--button-icon-hover);
        }
      }
    }
    &:active {
      &:not([disabled]) {
        .icon {
          background-color: var(--button-icon-active);
        }
      }
    }
    &[aria-expanded="true"] {
      .icon {
        background-color: var(--button-icon-expanded);
      }
      .label {
        color: var(--button-label-expanded);
      }
    }
  }

  &--warning {
    color: $warning;
    &:hover {
      color: darken($warning, 20%);
    }
  }

  &--danger {
    color: $danger;
    &:hover {
      color: darken($danger, 20%);
    }
  }

  &[disabled] {
    cursor: not-allowed;
    opacity: 0.2;
  }

}
