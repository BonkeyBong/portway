apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Release.Name}}-migrate-job"
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{.Release.Name}}-migrate"
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
      - name: db-migrate
        image: {{ printf "%s:%s" .Values.apiImage .Values.apiTag }}
        args: ["migrate"]
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: api.db-host
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: api.db-name
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: api.db-port
        - name: DB_USE_SSL
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: api.db-use-ssl
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: api.db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: db_user_password